{"ast":null,"code":"var _jsxFileName = \"/home/pp-4/Desktop/clone/Development/react/28 hooks/src/components/Ingredients/Ingredients.js\";\nimport React, { useReducer, useEffect, useCallback } from 'react';\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal';\nimport Search from './Search';\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n    case 'ADD':\n      return [...currentIngredients, action.ingredient];\n    case 'DELETE':\n      return currentIngredients.filter(ing => ing.id !== action.id);\n    default:\n  }\n};\nconst Ingredients = () => {\n  const [userIngredients, setUserIngredients] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  useEffect(() => {\n    console.log('RENDERING INGREDIENTS', userIngredients);\n  }, [userIngredients]);\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    setUserIngredients(filteredIngredients);\n  }, []);\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://react-hooks-update-20a7c-default-rtdb.firebaseio.com//ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      setIsLoading(false);\n      return response.json();\n    }).then(responseData => {\n      setUserIngredients(prevIngredients => [...prevIngredients, {\n        id: responseData.name,\n        ...ingredient\n      }]);\n    });\n  };\n  const removeIngredientHandler = ingredientId => {\n    setIsLoading(true);\n    fetch(`https://react-hooks-update-20a7c-default-rtdb.firebaseio.com//ingredients/${ingredientId}.json`, {\n      method: 'DELETE'\n    }).then(response => {\n      setIsLoading(false);\n      setUserIngredients(prevIngredients => prevIngredients.filter(ingredient => ingredient.id !== ingredientId));\n    }).catch(error => {\n      setError('Something went wrong!');\n      setIsLoading(false);\n    });\n  };\n  const clearError = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(ErrorModal, {\n    onClose: clearError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(IngredientForm, {\n    onAddIngredient: addIngredientHandler,\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onLoadIngredients: filteredIngredientsHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IngredientList, {\n    ingredients: userIngredients,\n    onRemoveItem: removeIngredientHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Ingredients;","map":{"version":3,"names":["React","useReducer","useEffect","useCallback","IngredientForm","IngredientList","ErrorModal","Search","ingredientReducer","currentIngredients","action","type","ingredients","ingredient","filter","ing","id","Ingredients","userIngredients","setUserIngredients","useState","isLoading","setIsLoading","error","setError","console","log","filteredIngredientsHandler","filteredIngredients","addIngredientHandler","fetch","method","body","JSON","stringify","headers","then","response","json","responseData","prevIngredients","name","removeIngredientHandler","ingredientId","catch","clearError","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClose","onAddIngredient","loading","onLoadIngredients","onRemoveItem"],"sources":["/home/pp-4/Desktop/clone/Development/react/28 hooks/src/components/Ingredients/Ingredients.js"],"sourcesContent":["import React, { useReducer, useEffect, useCallback } from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport ErrorModal from '../UI/ErrorModal'\nimport Search from './Search';\n\nconst ingredientReducer = (currentIngredients, action) => {\n  switch (action.type) {\n    case 'SET':\n      return action.ingredients;\n    case 'ADD':\n      return [...currentIngredients, action.ingredient]\n    case 'DELETE':\n      return currentIngredients.filter(ing => ing.id !== action.id);\n    default :\n  }\n}\n\nconst Ingredients = () => {\n  const [userIngredients, setUserIngredients] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  useEffect(() => {\n    console.log('RENDERING INGREDIENTS', userIngredients);\n  }, [userIngredients]);\n\n  const filteredIngredientsHandler = useCallback(filteredIngredients => {\n    setUserIngredients(filteredIngredients);\n  }, []);\n\n  const addIngredientHandler = ingredient => {\n    setIsLoading(true);\n    fetch('https://react-hooks-update-20a7c-default-rtdb.firebaseio.com//ingredients.json', {\n      method: 'POST',\n      body: JSON.stringify(ingredient),\n      headers: { 'Content-Type': 'application/json' }\n    })\n      .then(response => {\n        setIsLoading(false);\n        return response.json();\n      })\n      .then(responseData => {\n        setUserIngredients(prevIngredients => [\n          ...prevIngredients,\n          { id: responseData.name, ...ingredient }\n        ]);\n      });\n  };\n\n  const removeIngredientHandler = ingredientId => {\n    setIsLoading(true);\n    fetch(`https://react-hooks-update-20a7c-default-rtdb.firebaseio.com//ingredients/${ingredientId}.json`, {\n      method: 'DELETE',\n    }\n    ).then(response => {\n      setIsLoading(false);\n      setUserIngredients(prevIngredients =>\n        prevIngredients.filter(ingredient => ingredient.id !== ingredientId)\n      );\n    }).catch(error => {\n      setError('Something went wrong!');\n      setIsLoading(false);\n    });\n  };\n\n  const clearError = () => {\n    setError(null);\n    \n  }\n\n  return (\n    <div className=\"App\">\n      {error && <ErrorModal onClose={clearError}>{error}</ErrorModal>}\n      <IngredientForm \n        onAddIngredient={addIngredientHandler}\n        loading={isLoading}\n      />\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler} />\n        <IngredientList\n          ingredients={userIngredients}\n          onRemoveItem={removeIngredientHandler}\n        />\n      </section>\n    </div>\n  );\n};\n\nexport default Ingredients;"],"mappings":"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"},"metadata":{},"sourceType":"module"}