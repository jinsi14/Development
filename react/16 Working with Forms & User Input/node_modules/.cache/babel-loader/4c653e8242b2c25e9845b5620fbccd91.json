{"ast":null,"code":"import { useEffect, useState } from 'react';\n\n/*\nconst SimpleInput = (props) => {\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !=='';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n   let formIsValid = false;\n\n    if(enteredNameIsValid) {\n      formIsValid =true ;\n    }\n\n  const nameInputChnageHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n      event.preventDefault();\n\n      setEnteredNameTouched(true);\n\n      if(!enteredNameIsValid) {\n        return;\n      }\n\n      console.log(enteredName);\n\n      setEnteredName('');\n      setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n          type='text' \n          id='name' \n          onChange={nameInputChnageHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && <p className='error-text'>Name must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n*/","map":{"version":3,"names":["useEffect","useState"],"sources":["/home/pp-4/Desktop/clone/Development/react/16 Working with Forms & User Input/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useState} from 'react';\n\n/*\nconst SimpleInput = (props) => {\n\n  const [enteredName, setEnteredName] = useState('');\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !=='';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n   let formIsValid = false;\n\n    if(enteredNameIsValid) {\n      formIsValid =true ;\n    }\n\n  const nameInputChnageHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEnteredNameTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n      event.preventDefault();\n\n      setEnteredNameTouched(true);\n\n      if(!enteredNameIsValid) {\n        return;\n      }\n\n      console.log(enteredName);\n\n      setEnteredName('');\n      setEnteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? 'form-control invalid' : 'form-control';\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor='name'>Your Name</label>\n        <input \n          type='text' \n          id='name' \n          onChange={nameInputChnageHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && <p className='error-text'>Name must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n*/"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAO,OAAO;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}